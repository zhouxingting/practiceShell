#!/bin/bash

#创建4个sh
#显示结果定向至文件: echo ... > ...
#chmod:控制用户对文件的权限的命令
#754:所有者user读 + 写 + 执行:rwx,所有者Group:rw-,所有者Other:r--

# https://www.runoob.com/linux/linux-comm-chmod.html

# u 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。
# + 表示增加权限、- 表示取消权限、= 表示唯一设定权限。
# r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行。

# -c : 若该文件权限确实已经更改，才显示其更改动作
# -f : 若该文件权限无法被更改也不要显示错误讯息
# -v : 显示权限变更的详细资料
# -R : 对目前目录下的所有文件与子目录进行相同的权限变更(即以递归的方式逐个变更)
# --help : 显示辅助说明
# --version : 显示版本

# r	读	设置为可读权限
# w	写	设置为可写权限
# x	执行权限	设置为可执行权限
# X	特殊执行权限	只有当文件为目录文件，或者其他类型的用户有可执行权限时，才将文件权限设置可执行
# s	setuid/gid	当文件被执行时，根据who参数指定的用户类型设置文件的setuid或者setgid权限
# t	粘贴位	设置粘贴位，只有超级用户可以设置该位，只有文件所有者u可以使用该位

mkdir testSh
cd testSh
for((i=0; i<4; i++))
do
  touch $i.sh
  echo '#!/bin/bash' > $i.sh
  chmod 764 $i.sh
done